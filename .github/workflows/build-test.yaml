name: Build and Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        preset:
          - linux-release
          - windows-release
          - macos-release

    runs-on: ${{ contains(matrix.preset, 'windows') && 'windows-latest' || (contains(matrix.preset, 'macos') && 'macos-latest' || 'ubuntu-latest') }}

    steps:
      # --- Checkout Code ---
      - name: Checkout repository code
        uses: actions/checkout@v4

      # --- vcpkg Setup ---
      - name: Checkout vcpkg repository
        uses: actions/checkout@v4
        with:
          repository: "microsoft/vcpkg"
          path: "vcpkg"

      - name: Bootstrap vcpkg
        run: |
          cd $VCPKG_ROOT
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ./bootstrap-vcpkg.bat -disableMetrics
          else
            ./bootstrap-vcpkg.sh -disableMetrics
          fi
        shell: bash

      # --- Install Linux System Dependencies ---
      - name: Install required Linux packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build autoconf automake libtool pkg-config libltdl-dev
        shell: bash

      # --- Configure Project ---
      - name: Configure CMake using Preset (${{ matrix.preset }})
        run: cmake --preset ${{ matrix.preset }}
        shell: bash

      # --- Build Project ---
      - name: Build using Preset (${{ matrix.preset }})
        run: cmake --build --preset ${{ matrix.preset }}
        shell: bash
